name: Deploy Hapi.js Backend

on:
  push:
    branches:
      - main  # Change this if your main branch has a different name

env:
  AWS_REGION: "eu-central-1"
  ECR_REPOSITORY: "lowtech-gmbh-server"
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    name: 🔨 Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🏗️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🏷️ Login to AWS ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: 🐳 Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: 🚀 Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔄 Update AWS CodeDeploy AppSpec File
        run: |
          sed -i "s|<IMAGE_TAG>|$IMAGE_TAG|g" appspec.yml

      - name: 📦 Package Deployment Files into a ZIP
        run: |
          mkdir -p deploy_package
          cp appspec.yml deploy_package/
          cp -r scripts deploy_package/  # Ensure your start/stop scripts are included
          zip -r deploy_package.zip deploy_package

      - name: 📤 Upload Deployment Package to S3
        run: |
          aws s3 cp deploy_package.zip s3://${{ secrets.S3_BUCKET }}/deploy_package.zip --region $AWS_REGION

      - name: 📄 Generate `revision.json`
        run: |
          cat <<EOF > revision.json
          {
            "revisionType": "S3",
            "s3Location": {
              "bucket": "${{ secrets.S3_BUCKET }}",
              "key": "deploy_package.zip",
              "bundleType": "zip"
            }
          }
          EOF

      - name: 🚀 Deploy via AWS CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name lowtech-gmbh-app \
            --deployment-group-name lowtech-gmbh-deployment-group \
            --revision file://revision.json \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --region $AWS_REGION
